package com.example.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.greendao.bean.Coffee;
import com.example.greendao.bean.Device;
import com.example.greendao.bean.Gateway;

import com.example.greendao.gen.CoffeeDao;
import com.example.greendao.gen.DeviceDao;
import com.example.greendao.gen.GatewayDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig coffeeDaoConfig;
    private final DaoConfig deviceDaoConfig;
    private final DaoConfig gatewayDaoConfig;

    private final CoffeeDao coffeeDao;
    private final DeviceDao deviceDao;
    private final GatewayDao gatewayDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        coffeeDaoConfig = daoConfigMap.get(CoffeeDao.class).clone();
        coffeeDaoConfig.initIdentityScope(type);

        deviceDaoConfig = daoConfigMap.get(DeviceDao.class).clone();
        deviceDaoConfig.initIdentityScope(type);

        gatewayDaoConfig = daoConfigMap.get(GatewayDao.class).clone();
        gatewayDaoConfig.initIdentityScope(type);

        coffeeDao = new CoffeeDao(coffeeDaoConfig, this);
        deviceDao = new DeviceDao(deviceDaoConfig, this);
        gatewayDao = new GatewayDao(gatewayDaoConfig, this);

        registerDao(Coffee.class, coffeeDao);
        registerDao(Device.class, deviceDao);
        registerDao(Gateway.class, gatewayDao);
    }
    
    public void clear() {
        coffeeDaoConfig.clearIdentityScope();
        deviceDaoConfig.clearIdentityScope();
        gatewayDaoConfig.clearIdentityScope();
    }

    public CoffeeDao getCoffeeDao() {
        return coffeeDao;
    }

    public DeviceDao getDeviceDao() {
        return deviceDao;
    }

    public GatewayDao getGatewayDao() {
        return gatewayDao;
    }

}
